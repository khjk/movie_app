{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTA+BeA,MA3Bf,YAAwD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC3C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACTD,EAAOI,KAAK,SAACC,EAAOC,GAAR,OACT,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OAGlD,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAE,KAA9C,UC8BDC,G,kNAvCbC,MAAS,CACPC,WAAW,EACXC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGGJ,EAHH,EAERK,KACGA,KAAQL,OAGb,EAAKM,SAAS,CAAEN,SAAQD,WAAU,IANxB,2C,kEASVQ,KAAKN,c,+BAEE,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OAAO,6BAASX,UAAU,aACvBU,EACG,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACb,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAjCduB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3d90247f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({ year, title, summary, poster, genres}){\r\n    return( \r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map( (genre, index) => (\r\n                        <li key={index} className=\"genres_genre\">{genre}</li> \r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0,180)}...</p>\r\n            </div>\r\n        </div>\r\n    );   \r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\"\nimport \"./App.css\"\n\n//클래스 컴포넌트 (React컴포넌트로부터 확장한 App컴포넌트)\nclass App extends React.Component{\n  state  = {\n    isLoading: true,\n    movies : []\n  };\n  getMovies = async() => { //data.data.movies -> movies\n    const {\n      data: {\n         data : {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading:false }) //movies : movies (state 수정)\n  }\n  componentDidMount(){ //render하면 호출되는 life cycle method\n    this.getMovies();\n  }\n  render(){\n    const {isLoading, movies} = this.state;\n    return <section className=\"container\">\n      {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div> \n       ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n                <Movie \n                  key={movie.id}\n                  id={movie.id} \n                  year={movie.year} \n                  title={movie.title} \n                  summary={movie.summary} \n                  poster={movie.medium_cover_image}\n                  genres={movie.genres} />\n             ))}\n          </div>\n       )}\n    </section>\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root')); //react application은 하나의 component만을 rendering해야함\r\n\r\n\r\n"],"sourceRoot":""}